name: 'Build updater as actions artifact'
description: 'Generate the NSIS installer as upload artifact'
inputs:
  artifact_name:
    description: 'Name of artifact'
    required: true
    default: 'installFiles'
  token:
    description: 'Github token to checkout private dependencies'
    required: true
  path:
    description: 'Path to checked out sdk-samples'
    required: true

runs:
  using: "composite"
  steps:
    - name: Test working directory
      shell: cmd
      run:
        cd ${{ inputs.path }}

    - name: Check out private dependencies
      uses: actions/checkout@v3
      with:
        lfs: true
        submodules: true
        repository: labforge/pleora_backing
        token: ${{ inputs.token }}
        path: ${{ inputs.path }}/dependencies

    - name: Setup dependencies
      shell: cmd
      working-directory: ${{ inputs.path }}
      run: |
        .github\actions\build\bootstrap.bat

    - name: Install eBUS Python
      shell: cmd
      working-directory: ${{ inputs.path }}
      run: |
        CALL venv\Scripts\activate
        ECHO "Install eBUS Python"
        pip install dependencies\ebus_python-6.3.0-6343-py310-none-win_amd64.whl

    - name: Build example executables
      shell: cmd
      working-directory: ${{ inputs.path }}
      run: |
        call venv\Scripts\activate

        REM Build distribution example (depends on most other samples)
        cd distribution
        build.bat

    - name: Sign executables
      shell: cmd
      run: |
        signtool sign /f C:\Users\labforge\Documents\labforge.cer /csp "eToken Base Cryptographic Provider" /td sha256 /fd sha256 /k ${{ secrets.SIGNINGPASSWORD }} stereoviewer\install\stereoviewer.exe distribution\dist\main\updater.exe distribution\build\driver.exedist\main\driver.exe dist\main\driver.exe
      #if: secrets.SIGNINGPASSWORD

    - name: Build installer
      shell: cmd
      run: |
        call venv\Scripts\activate
        REM Build distribution example (depends on most other samples)
        cd distribution
        make_install.bat
    
    - name: Sign installer
      shell: cmd
      run: |
        signtool sign /f C:\Users\labforge\Documents\labforge.cer /csp "eToken Base Cryptographic Provider" /td sha256 /fd sha256 /k ${{ secrets.SIGNINGPASSWORD }} distribution\build\updater.exe
      #if: secrets.SIGNINGPASSWORD

    - name: Upload installer artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ inputs.artifact_name }}
        path: ${{ inputs.path }}/distribution/build/updater.exe
        if-no-files-found: error